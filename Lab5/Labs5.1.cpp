/*1. Напишите класс бинарного дерева поиска, котрый поддерждивает: вставка элементов по значению(Insert), поиск элементов по значению(Search)
    ТЗ:
    для класса TreeNode определить:
    - конструктор по умолчанию, инициализирующий значения элементов равных нулю, указатели дочерних узлов, равных nullptr;
    - конструктор, принимающий значение;
    - геттеры и сеттеры значения и дочерних узлов;
    - все поля класса должны быть private;
    для класса BinaryTree определить:
    - конструктор по умолчанию, инициализирующий значения элементов равных нулю, указатели дочерних узлов, равных nullptr;
    - конструктор, принимающий значение;
    - деструктор, удаляющий все узды дерева;
    - метод вставки Insert() (по значению);
    - метод поиска Search(), возвращающий указатель на узел (поиск по значению);
    - все поля класса должны быть private;
    - перегрузить (в private секции) методы поиска и вставки, данные методы должны принимать в качестве аргумента значение и указатель на узел
    (использовать данне перегрузки внутри метов Insert и Search, определенных в public секции).
*/


#include <iostream>
#include "TreeNode.h"
#include "BinaryTree.h"

using namespace std;

int main() {
    BinaryTree* tree = new BinaryTree;

    tree->Insert(1);
    tree->Insert(4);
    tree->Insert(2);
    tree->Insert(6);
    tree->Insert(8);
    tree->Insert(3);

    cout << endl << "Узел со значением 1 имеет указатель: " << tree->Search(1) << endl;
    cout << endl << "Узел со значением 6 имеет указатель: " << tree->Search(6) << endl;
    return 0;
}